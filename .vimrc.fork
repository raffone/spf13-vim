" General {

  "set bufhidden=delete

  set nospell
  set visualbell
  set synmaxcol=2048
  set noesckeys
  set timeoutlen=1000 ttimeoutlen=0

  set linebreak
  set wrap

  "au FocusLost * :wa
  au FocusLost,TabLeave * call feedkeys("\<Esc>l")

  let sessionman_save_on_exit = 1

  set foldmethod=indent
  set foldlevel=20
  set foldlevelstart=20

" }

" Vim UI {

  " [ Set theme ]------------------------------------------------------------

  if has('gui_running')
    set transparency=0
    set guifont=DejaVu\ Sans\ Mono\ for\ Powerline:h11

    let base16colorspace=256
    color base16-default-bright

    hi! MatchParen guibg=bg guifg=#fcffea gui=underline
    hi! CursorLineNr guifg=#b6b6b6
    hi! Visual guibg=#505050
  else
    let g:solarized_contrast="normal"
    let g:solarized_visibility="normal"
  endif

  " [ Cursors ]--------------------------------------------------------------

  set gcr=n:hor1-blinkon0
  set gcr+=c-v:blinkon0
  set gcr+=i-ci:ver1-blinkwait600-blinkon600-blinkoff600

" }

" Formatting {

  set shiftwidth=2                " Use indents of 4 spaces
  set tabstop=2                   " An indentation every four columns
  set softtabstop=2               " Let backspace delete indent

  function! TabToggle()
    if &expandtab
      set noexpandtab
      echo "Indent with Tabs"
    else
      set expandtab
      echo "Indent with Spaces"
    endif
  endfunction

  nmap <F9> mz:execute TabToggle()<CR>'z

  autocmd FileType css,html,sass,scss,coffee autocmd BufWritePre <buffer> call StripTrailingWhitespace()
" }

" Key (re)Mappings {

  " [ Prevent escape from moving the cursor ]--------------------------------

  "inoremap <silent> <Esc>   <Esc>l
  "inoremap <silent> <Esc> <C-O>:stopinsert<CR>
  inoremap <silent> <Esc> <Esc>`^

  " [ Open file under cursor ]-----------------------------------------------

  nmap <C-CR> gf
  nmap <C-S-CR> :vertical wincmd f<CR>

  " [ Close html tag ]-------------------------------------------------------

  nnoremap <D-≥>        i<lt>/<C-X><C-O><Esc>
  inoremap <D-≥>        <lt>/<C-X><C-O>

  " [ Allways start from start of word ]-------------------------------------

  noremap cw          ciw
  noremap dw          diw

  nnoremap yw         yiw
  nnoremap Y          Y

  " [ Quickjump cursor ]-----------------------------------------------------

  nnoremap <A-Right>      w
  nnoremap <A-Left>       b

  " [ Select lines ]---------------------------------------------------------

  nnoremap <S-Right>      vl
  nnoremap <S-Left>       vh
  nnoremap <S-Up>       Vk
  nnoremap <S-Down>       Vj
  nnoremap <D-S-Right>    v$
  nnoremap <D-S-Left>     v^
  nnoremap <D-S-Down>     ^Vl%
  nnoremap <A-S-Right>    vw
  nnoremap <A-S-Left>     vb

  vnoremap <S-Up>       k
  vnoremap <S-Down>       j
  vnoremap <D-S-Up>       k
  vnoremap <D-S-Down>     j
  vnoremap <A-S-Up>       k
  vnoremap <A-S-Down>     j
  vnoremap <A-S-Right>    w
  vnoremap <A-S-Left>     b

  inoremap <S-Right>      <Esc>vl
  inoremap <S-Left>       <Esc>vh
  inoremap <S-Up>       <Esc>vk
  inoremap <S-Down>       <Esc>vj
  inoremap <D-S-Right>    <Esc>v$
  inoremap <D-S-Left>     <Esc>v^
  inoremap <D-S-Down>     <Esc>^Vl%
  inoremap <A-S-Right>    <Esc>vw
  inoremap <A-S-Left>     <Esc>vb

  " [ Move lines ]-----------------------------------------------------------

  nnoremap <A-Enter>      O<Esc>

  nnoremap <D-C-Up>       :m .-2<CR>
  nnoremap <D-C-Down>     :m .+1<CR>

  inoremap <D-C-Up>       <Esc>:m .-2<CR>==gi
  inoremap <D-C-Down>     <Esc>:m .+1<CR>==gi

  vnoremap <D-C-Up>       :m '<-2<CR>gv=gv
  vnoremap <D-C-Down>     :m '>+1<CR>gv=gv

    " [ Duplicate lines ]------------------------------------------------------

  nnoremap <Leader>dd     "zY"zp

  nnoremap <D-d>        "zY"zp
  vnoremap <D-d>        "zy"zP
  inoremap <D-d>        <Esc>"zY"zpi

  " [ Sort lines ]-----------------------------------------------------------

  vnoremap <F5>         :sort<CR>

    " [ Delete lines ]---------------------------------------------------------

  nnoremap <Del>        "_dl
  nnoremap <D-Del>      "_D
  nnoremap <A-Del>      "_diw

  inoremap <D-Del>      <Esc>l"_Di
  inoremap <A-Del>      <Esc>viw"_di

    " [ Comment lines ]---------------------------------------------------------

  nmap <Leader>cc       <plug>NERDCommenterToggle
  vmap <Leader>cc       <plug>NERDCommenterToggle

  " [ Increase/decrease number ]---------------------------------------------

  nnoremap <C-Up>         <C-a>
  nnoremap <C-Down>       <C-x>

  " [ Indent ]---------------------------------------------------------------

  nnoremap <silent> >     >>
  nnoremap <silent> <     <<

  " [ Multiple lines ]-------------------------------------------------------

  nnoremap <Leader>gg     :MultipleCursorsFind <C-r><C-w><CR>

  " [ TABS ]-----------------------------------------------------------------

  nnoremap <Leader>tt     :tabnew<CR>
  nnoremap <Leader>tg     :tabclose<CR>
  nnoremap <Leader>tr     :tabp<CR>
  nnoremap <Leader>ty     :tabn<CR>

  nnoremap <D-A-Up>       :tabnew<CR>
  nnoremap <D-A-Down>     :tabclose<CR>
  nnoremap <D-A-Left>     :tabp<CR>
  nnoremap <D-A-Right>    :tabn<CR>

  " [ WINDOWS ]--------------------------------------------------------------

  nnoremap <Leader>ww     :vs<CR>
  nnoremap <Leader>ws     :clo<CR>
  nnoremap <Leader>wq     :wincmd h<CR>
  nnoremap <Leader>we     :wincmd l<CR>
  nnoremap <Leader>wa     :wincmd w<CR>

  nnoremap <C-A-Up>       :wincmd k<CR>
  nnoremap <C-A-Down>     :wincmd j<CR>
  nnoremap <C-A-Left>     :wincmd h<CR>
  nnoremap <C-A-Right>    :wincmd l<CR>

  "nnoremap <C-A-Del>       :clo<CR>
  " nnoremap <C-A-Home>     :ZoomWin<CR>

  nnoremap <C-A-PageUp>   :vs<CR>
  nnoremap <C-A-PageDown>   :sp<CR>

  " [ Cerca ]----------------------------------------------------------------

  " Search in file
  nnoremap <D-f>        /

  " Search inside project
  nnoremap <D-F>        :Ack<Space>

  " Search current selected text
  vnoremap <C-S-G>      yq/p<cr>

  " [ ctrlp.vim ]------------------------------------------------------------

  let g:ctrlp_switch_buffer = 0
  let g:ctrlp_max_depth = 10
  let g:ctrlp_max_files = 500
  let g:ctrlp_reuse_window = 'netrw\|help\|quickfix\|NERD'
  let g:ctrlp_map = ''
  let g:ctrlp_show_hidden = 1

  set wildignore+=*.DS_Store
  set wildignore+=*/db/*
  set wildignore+=*/node_modules/*
  set wildignore+=*/.sass-cache/*
  set wildignore+=*/tmp/*
  set wildignore+=*/vendor/*
  set wildignore+=*.png,*.gif,*.jpg,*.jpeg

  let g:ctrlp_prompt_mappings = {
    \ 'AcceptSelection("e")': ['<cr>', '<2-LeftMouse>'],
    \ 'AcceptSelection("v")': ['<c-x>', '<c-cr>', '<a-cr>', '<c-s>'],
    \ 'AcceptSelection("t")': ['<s-cr>'],
    \ }

  unlet g:ctrlp_user_command

  nnoremap <silent> <Leader>p :CtrlP .<CR>
  noremap <silent> <D-p>  :CtrlP .<CR>

  " [ Reindent ]-------------------------------------------------------------
  map <F8>        mzgg=G`z<CR>

  " [ Fold current block ]---------------------------------------------------
  " map <F9> za
  nnoremap <silent> <Space> @=(foldlevel('.')?'za':"\<Space>")<CR>
  " vnoremap <Space> zf
" }

" indent_guides {
  let g:indent_guides_color_change_percent = 5
" }

" neosnippet {
  let g:neosnippet#snippets_directory='~/.vim/bundle/sass-compass-neosnippet/snippets'

  " SuperTab like snippets behavior.
  imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
    \ "\<Plug>(neosnippet_expand_or_jump)"
    \: pumvisible() ? "\<C-n>" : "\<TAB>"
  smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
    \ "\<Plug>(neosnippet_expand_or_jump)"
    \: "\<TAB>"

" }

